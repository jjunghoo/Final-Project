npx json-server ./data.json --port 4000


원래 리덕스 상태관리가

UI -> dispatch -> redux 상태관리 변경 -> UI

UI -> dispatch(get) -> reducer(get 실행) -> saga(는 get을 인식하도록 함) -> 결과에 따라서 dispatch(success) or dispatch(failure) -> 리덕스 상태관리 변경을 하고 -> UI
                                                                                                                            -> 서버 내용 변경, 상태관리 변경 -> UI

Saga를 쓰는 이유 -> 비동기적 프로세스 처리를 위해서!!! -> 서버 통신 값이 제대로 받아 진 후 작업을 진행 하려고~!!!! ajax를 위해서 사용함 ->>>

비동기적이란 꼭 순서대로 프로그램이 작동되어야함 -> 절차지향적 소스


서울 -> 부산 (원래 리덕스)

서울 -> 대전-> (사실 여행 계획이 없었음) 토의 후 어디로 갈지 정함 이게 서버와의 통신-> 부산
                                                                              -> 광주
사가가 없으면

서울 -> 대전
     -> 어디로 갈지 토의;
    -> 부산
    -> 광주?

    ->>> 아씨 어디로가라고???? 회의는 한거야??? 
                                                              



employeeReducer initialState
const initialState = {
  employeeInfo: { initialInfo: "i드ㅐnitial" },
  id: 0,
  resume: {이력서 정보가 저장되어 있는 상태 employeeReducer.js  폴더 안에
    
  },
  errmsg: "",
};

employeeReducer.resume -> 넣으면 바로 나타나는 식으로 





요소 추가하고 제거하고 쓰는건 결국 employee가 해야하는거고
현제 저희가 해야하는건 결국 employer가 사용할 수 있도록 이력서를 봐야하는 것이니까
그냥 data 넣으면 짜르륵 나오는 식으로 하는 것이 좋지 않을까요???
추후 추가하는 기능 넣고